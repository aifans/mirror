#!/bin/sh

LC_ALL=C
export LC_ALL

. auto/options
. auto/init
. auto/sources

test -d $TC_OBJS || mkdir $TC_OBJS

echo > $TC_AUTO_HEADERS_H
echo > $TC_AUTOCONF_ERR

echo "#define TC_CONFIGURE \"$TC_CONFIGURE\"" > $TC_AUTO_CONFIG_H

if test -z "$TC_PLATFORM"; then
    echo "checking for OS"

    TC_SYSTEM=`uname -s 2>/dev/null`
    TC_RELEASE=`uname -r 2>/dev/null`
    TC_MACHINE=`uname -m 2>/dev/null`

    echo " + $TC_SYSTEM $TC_RELEASE $TC_MACHINE"

    TC_PLATFORM="$TC_SYSTEM:$TC_RELEASE:$TC_MACHINE";

else
    echo "building for $TC_PLATFORM"
    TC_SYSTEM=$TC_PLATFORM
fi


case "$TC_PLATFORM" in

    Linux:*)
    . auto/os/linux
    ;;  

    *) 
    echo "error: Linux only!"
    exit 1
esac

if [ $TC_PF_RING_DIR != NONE ]; then
    have=TC_HAVE_PF_RING . auto/have
    CORE_LIBS="$CORE_LIBS $TC_PF_RING_DIR/userland/libpcap/libpcap.a"
    CORE_LIBS="$CORE_LIBS $TC_PF_RING_DIR/userland/lib/libpfring.a"
    CORE_LIBS="$CORE_LIBS -lpthread -lnuma"
else
    CORE_LIBS="$CORE_LIBS -lpcap"
fi

if [ $TC_DEBUG = YES ]; then
    have=TC_DEBUG . auto/have
fi


. auto/cc/conf
. auto/headers
. auto/os/conf
. auto/linux


case ".$TC_PREFIX" in
    .)
        TC_PREFIX=${TC_PREFIX:-/usr/local/mirror}
        have=TC_PREFIX value="\"$TC_PREFIX/\"" . auto/define
    ;;

    .!)
        TC_PREFIX=
    ;;

    *)
        have=TC_PREFIX value="\"$TC_PREFIX/\"" . auto/define
    ;;
esac

have=TC_SBIN_PATH value="\"$TC_SBIN_PATH\"" . auto/define
have=TC_PID_PATH value="\"$TC_PID_PATH\"" . auto/define
have=TC_ERROR_LOG_PATH value="\"$TC_ERROR_LOG_PATH\"" . auto/define

. auto/make
. auto/install
. auto/summary
